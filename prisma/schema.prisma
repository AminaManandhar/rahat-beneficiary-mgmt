// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int       @unique @default(autoincrement())
  name       String    @db.VarChar() @unique
  isSystem   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  Permission Permission[]
  User       User[]

  @@map("roles")
}

model Permission {
  id         Int     @unique @default(autoincrement())
  role       Role    @relation(fields: [roleId], references: [id])
  roleId    Int     @db.Integer()
  action     String  @db.VarChar()
  subject    String  @db.VarChar()
  inverted   Boolean @default(false)
  conditions Json?   @db.JsonB()
  reason     String? @db.Text()

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()

  @@map("permissions")
}

model User {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  authAddress String @unique
  authType    AuthType @default(Email)

  firstName   String
  lastName    String

  role    Role @relation(fields: [roleId], references: [id])
  roleId Int  @db.Integer()

  otp     String?

  @@map("users")
}

model Beneficiary{
  id    Int    @id @default(autoincrement()) @db.Integer()

  uuid  String  @unique  @default(uuid()) @db.Uuid()

  firstName String
  lastName String
  birthDate DateTime?
  gender    Gender
  location String?
  latitude  Float?
  longitude Float?
  phone     String?
  email    String?
  extras Json?      @db.JsonB()
  notes String?

  beneficiaries_group BeneficiaryGroup[]

  @@map("tbl_beneficiaries")
}

model FieldDefinition {
  id                Int     @id      @default(autoincrement())   @db.Integer()
  name              String  @unique   
  field_type        String  // Enum
  field_populate    Json?   // { data: "john doe" } Or { data: [{id:1, label:'Green'}] }
  is_active         Boolean @default(true)

  @@map("tbl_field_definition")
}


model Group{
  id  Int @id @default(autoincrement()) @db.Integer()

  name  String  @unique

  beneficiaries_group   BeneficiaryGroup[]

  @@map("tbl_groups")

}

model BeneficiaryGroup{
  id  Int  @id @default(autoincrement()) @db.Integer()

  beneficiary  Beneficiary  @relation(fields: [beneficary_id], references: [id])
  beneficary_id  Int  @db.Integer()

  group  Group  @relation(fields: [group_id],references: [id])
  group_id Int  @db.Integer()

  @@map("tbl_beneficiariesgroups")

}



enum Gender {
  Male
  Female
  Others
}

enum AuthType {
  Email
  Phone
  Wallet
}

enum FieldType {
  Checkbox
  Dropdown
  Number
  Password
  Radio
  Text
  Textarea
}